<?php
/**
 * LineItemTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\EbayFulFillmentClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * The version of the OpenAPI document: v1.19.2
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\EbayFulFillmentClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * LineItemTest Class Doc Comment
 *
 * @category    Class
 * @description This type contains the details of each line item in an order.
 * @package     OpenAPI\EbayFulFillmentClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class LineItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "LineItem"
     */
    public function testLineItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "applied_promotions"
     */
    public function testPropertyAppliedPromotions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_cost"
     */
    public function testPropertyDeliveryCost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "discounted_line_item_cost"
     */
    public function testPropertyDiscountedLineItemCost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ebay_collect_and_remit_taxes"
     */
    public function testPropertyEbayCollectAndRemitTaxes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gift_details"
     */
    public function testPropertyGiftDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacy_item_id"
     */
    public function testPropertyLegacyItemId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacy_variation_id"
     */
    public function testPropertyLegacyVariationId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "line_item_cost"
     */
    public function testPropertyLineItemCost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "line_item_fulfillment_instructions"
     */
    public function testPropertyLineItemFulfillmentInstructions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "line_item_fulfillment_status"
     */
    public function testPropertyLineItemFulfillmentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "line_item_id"
     */
    public function testPropertyLineItemId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "listing_marketplace_id"
     */
    public function testPropertyListingMarketplaceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "properties"
     */
    public function testPropertyProperties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_marketplace_id"
     */
    public function testPropertyPurchaseMarketplaceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refunds"
     */
    public function testPropertyRefunds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sold_format"
     */
    public function testPropertySoldFormat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "taxes"
     */
    public function testPropertyTaxes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total"
     */
    public function testPropertyTotal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
